---
import ArticleCard from "./ArticleCard.astro";
import articleImage from "/assets/Var.webp";
import comingSoonImage from "/assets/soon.webp";
import closureImage from "/assets/closure.webp";
import errorsImage from "/assets/fastapi_errors.webp";

const articlesArray = [
	{
		name: "Level Up Your FastAPI: Exception Handling Done Right",
		image: errorsImage,
		desc: `FastAPI's robust exception handling capabilities are key to building reliable APIs, yet many developers struggle to implement them effectively. This guide breaks down everything you need to know about handling exceptions in FastAPI `,
		mediumLink: "https://medium.com/@ixbahy/level-up-your-fastapi-exception-handling-done-right-5db862038c7a",
		link: "/articles/Level Up Your FastAPI, Exception Handling Done Right",
	},
	{
		name: "Scopes & closures",
		image: closureImage,
		desc: `Some people said JavaScript has 2 scopes others said 3 and frankly some said 4 !!
            all are right but we have to understand as in every programming language JS has two main scopes (Global, Local) and the Local scope consists of 2 other scopes (Function, Block)
            so what are some uses of the scopes or why it’s important to understand them`,
		mediumLink:
			"https://medium.com/@ixbahy/javascript-scopes-environments-and-closures-922168eb7f2",
		link: "/articles/Environments and closures",
	},
	{
		name: "The Var History",
		image: articleImage,
		desc: `var and let might do almost the same job but under the hood var is a different breed,
            Variables declared with var are either function-scoped or global-scoped. They are visible through blocks => no block scope.
            and they are always hoisted and tolerate redeclaration ‘ That’s the difference in a nutshell ‘`,
		mediumLink: "https://medium.com/@ixbahy/the-javascript-var-676e740454db",
		link: "/articles/The Var History",
	},

];
---

<style>
	:global(.article__card) {
		transition: opacity 0.2s linear;
	}
	.article__container:hover :global(.article__card:not(:hover)) {
		opacity: 0.5;
	}
	.article__container:hover :global(.article__card:hover) {
		box-shadow: 6px 9px 12px -3px rgb(6 2 20 / 85%);
	}
</style>
<main
	class="article__container max-w-2xl ms-24 mt-24 mobile:w-full mobile:mx-auto"
>
	<!-- article Card -->
	<ul aria-label="Articles" tabindex="0">
		{
			articlesArray.map((article) => {
				return (
					<ArticleCard
						name={article.name}
						image={article.image}
						desc={article.desc}
						mediumLink={article.mediumLink}
						link={article.link}
						role="listitem"
					/>
				);
			})
		}
	</ul>
</main>
